@* @if ((!_problemsAreLoading && ((_isFiltered && _filteredProblems.Count > 0) || (!_isFiltered && _problems.Count > 0))))
{
    <div class="navigation mb-2 w-100">
        <nav aria-label="Page navigation example" class="d-flex justify-content-around">
            <ul class="pagination bg-dark d-flex flex-wrap">
                <li class="page-item @(_currentPage == 1 ? "disabled" : "")">
                    <a class="page-link bg-dark link-primary" @onclick="() => GoToPage(_currentPage - 1)">
                        &lt;
                    </a>
                </li>

                @if (_totalPages <= 5)
                {
                    @for (int i = 1; i <= _totalPages; i++)
                    {
                        var page = i;
                        <li class="page-item @(i == _currentPage ? "active" : "")">
                            <a class="page-link bg-dark link-primary" @onclick="() => GoToPage(page)">
                                @i
                            </a>
                        </li>
                    }
                }
                else
                {
                    <li class="page-item @(1 == _currentPage ? "active" : "")">
                        <a class="page-link bg-dark link-primary" @onclick="() => GoToPage(1)">1</a>
                    </li>

                    @if (_currentPage > 3)
                    {
                        <li class="page-item">
                            <span class="page-link bg-dark link-secondary">...</span>
                        </li>
                    }

                    int start = Math.Max(2, _currentPage - 2);
                    int end = Math.Min(_totalPages - 1, _currentPage + 2);
                    @for (int i = start; i <= end; i++)
                    {
                        var page = i;
                        <li class="page-item @(page == _currentPage ? "active" : "")">
                            <a class="page-link bg-dark link-primary" @onclick="() => GoToPage(page)">
                                @i
                            </a>
                        </li>
                    }

                    @if (_currentPage < _totalPages - 2)
                    {
                        <li class="page-item">
                            <span class="page-link bg-dark link-secondary">...</span>
                        </li>
                    }

                    <li class="page-item @(_totalPages == _currentPage ? "active" : "")">
                        <a class="page-link bg-dark link-primary" @onclick="() => GoToPage(_totalPages)">@_totalPages</a>
                    </li>
                }

                <li class="page-item @(_currentPage == _totalPages ? "disabled" : "")">
                    <a class="page-link bg-dark link-primary" @onclick="() => GoToPage(_currentPage + 1)">
                        &gt;
                    </a>
                </li>
            </ul>
        </nav>
    </div>
}

@code {
    private int _maxProblemsToShow = 20;
    private int _currentPage = 1;
    private int _totalPages => (int)Math.Ceiling((double)(_isFiltered ? _filteredProblems.Count : _problems.Count) / _maxProblemsToShow);
    private bool _isFiltered => _selectedDifficulty > -1;
    private bool _isFiltering;
}
 *@